#!/usr/bin/python3
"""CentralNotice changes monitor
TODO: Overview of code layout
Notes: 
- no state (other than config/setup) outside controller
- no wiki api calls outside wiki_api
- direct manipulation of banners, campaigns only by their respective managers
- don't use complex objects from pywikibot, not needed
- controller tells a high-level story
- no accessing page or campaign instances from listener threads
"""


import argparse

from centralnotice_changes_monitor import config, setup_logging, controller


# Only run as command-line script
if __name__ == '__main__':

    # Set up command-line arguments and help

    parser = argparse.ArgumentParser(
        description = 'CentralNotice Changes Monitor: TODO: Usage overview'
    )

    parser.add_argument(
        '--config',
        help= """Configuration file to use. (Without this option, the script looks for a
            configuration file in the working directory and in
            /etc/centralnotice_changes_monitor.)"""
    )

    parser.add_argument(
        '--debug',
        help = 'Output debugging info to stderr.',
        action = 'store_true'
    )

    args = parser.parse_args()

    # Do stuff with options available to all commands
    config.filename = args.config # Will be None if the command-line option was not set
    cfg = config.get()

    setup_logging( args.debug )

    # Call the controller function to stream changes
    result = controller.stream_changes(
        db_settings = cfg[ 'db' ],
        wiki_api_settings = cfg.get( 'wiki', None ),
        kafka_settings = cfg[ 'kafka' ],
        alert_pattern_settings = cfg[ 'alert_patterns' ]
    )

    print( result )
